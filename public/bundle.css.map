{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "box.svelte",
    "dialog.svelte",
    "Table.svelte",
    "TableNew.svelte",
    "TableView.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import Table from \"./table/Table.svelte\";\r\n  import TableView from \"./table/TableView.svelte\";\r\n  import { encode } from \"./lib/enc.svelte\";\r\n\r\n  let pass = true;\r\n  let choosen = window.choosen;\r\n\r\n  const auth = function () {\r\n    var askForPassword = prompt(\"Enter Password\", \"\");\r\n    if (askForPassword != null) {\r\n      askForPassword = encode(askForPassword);\r\n      const xh = new XMLHttpRequest();\r\n      xh.open(\"GET\", `/apiv1/auth/${askForPassword}`, false);\r\n      xh.send(null);\r\n      const result = JSON.parse(xh.responseText);\r\n\r\n      if (result[\"auth\"] == true) {\r\n        success();\r\n        pass = true;\r\n      } else {\r\n        auth();\r\n      }\r\n    }\r\n  };\r\n\r\n  const success = function () {\r\n    if (choosen == null) {\r\n      choosen = \"table\";\r\n    }\r\n\r\n    window.changePage = function (to = \"account\") {\r\n      window.choosen = to;\r\n      window.updateChoosen();\r\n    };\r\n\r\n    window.updateChoosen = function () {\r\n      choosen = window.choosen;\r\n    };\r\n\r\n    window.HEIGHT = window.innerHeight - 10;\r\n    window.addEventListener(\"resize\", () => {\r\n      location.reload();\r\n    });\r\n\r\n    window.editable = true;\r\n\r\n    window.socket.on(\"no edit\", () => {\r\n      window.editable = false;\r\n    });\r\n\r\n    window.codes = {};\r\n  };\r\n\r\n  auth();\r\n</script>\r\n\r\n<style>\r\n  button {\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 20px;\r\n    font-weight: bold;\r\n    padding: 10px;\r\n  }\r\n\r\n  #main {\r\n    background: #1f2b3a;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    padding-top: 30px;\r\n    padding-bottom: 30px;\r\n    overflow: auto;\r\n  }\r\n</style>\r\n\r\n{#if pass == true}\r\n  <table style=\"height: 100%; width: 100%;\">\r\n    <tr>\r\n      <td>\r\n        <div\r\n          id=\"main\"\r\n          style=\"max-height: {window.HEIGHT - 100}px; width: {window.innerWidth - 100}px;\">\r\n          {#if choosen === 'table'}\r\n            <Table />\r\n          {:else if choosen === 'tableview'}\r\n            <TableView />\r\n          {/if}\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n\r\n  {#if choosen === 'tableview'}\r\n    <button on:click={() => window.changePage('table')}>Back</button>\r\n  {/if}\r\n{/if}\r\n",
    "<style>\r\n  div {\r\n    background: #1a2835;\r\n    border-radius: 10px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    color: #6aaac9;\r\n    border: 1px solid #6aaac9;\r\n  }\r\n</style>\r\n\r\n<div class=\"box\">\r\n  <slot />\r\n</div>\r\n",
    "<script>\r\n  import Box from \"./box.svelte\";\r\n  import { center } from \"../lib/center.svelte\";\r\n\r\n  export let id;\r\n  if (id == undefined) {\r\n    id = \"dialog\";\r\n  }\r\n\r\n  export let title;\r\n  if (title == undefined) {\r\n    title = \"\";\r\n  }\r\n\r\n  export let button;\r\n  if (button == undefined) {\r\n    button = false;\r\n  }\r\n\r\n  export let style;\r\n  if (style == undefined) {\r\n    style = \"\";\r\n  }\r\n\r\n  export let open;\r\n  if (open == undefined) {\r\n    open = \"false\";\r\n  }\r\n\r\n  export let onClose = ()=>{};\r\n\r\n  import { onMount } from \"svelte\";\r\n  let LOADED = false;\r\n\r\n  onMount(() => {\r\n    const height = window.HEIGHT - 100;\r\n    if (button) {\r\n    } else {\r\n      window.dialog_show(id);\r\n    }\r\n    if (open == \"false\") {\r\n      window.dialog_close(id);\r\n    }\r\n  });\r\n\r\n  window.dialog_show = id => {\r\n    //document.getElementById(id).style.display = \"\";\r\n    LOADED = id;\r\n  };\r\n\r\n  window.dialog_close = id => {\r\n    //document.getElementById(id).style.display = \"none\";\r\n    onClose()\r\n    LOADED = false;\r\n  };\r\n</script>\r\n\r\n<style>\r\n  button {\r\n    padding: 10px;\r\n    background: #1a2835;\r\n    border-radius: 10px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    color: #6aaac9;\r\n    border: 1px solid #6aaac9;\r\n    border-radius: 50px;\r\n    margin: 10px;\r\n  }\r\n\r\n  .dialog {\r\n    background: #1a2835;\r\n    color: #6aaac9;\r\n    z-index: 99;\r\n    position: fixed;\r\n    border-radius: 10px;\r\n    padding: 1%;\r\n    display: block;\r\n    animation: backInDown 0.3s;\r\n    max-height: 50vh;\r\n    overflow: auto;\r\n  }\r\n\r\n  .table {\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n{#if LOADED === id}\r\n  <table use:center class=\"dialog\" {id}>\r\n    <table class=\"table\">\r\n      <tr>\r\n        <td colspan=\"5\">\r\n          <h2 class=\"unselectable\">{title}</h2>\r\n        </td>\r\n        <td>\r\n          <button class=\"unselectable\" on:click={() => window.dialog_close(id)}>\r\n            X\r\n          </button>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td colspan=\"6\">\r\n          <slot />\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </table>\r\n{/if}\r\n{#if button != false}\r\n  <button class=\"box\" on:click={() => window.dialog_show(`${id}`)} {style}>\r\n    {button}\r\n  </button>\r\n{/if}\r\n",
    "<script>\r\n  import Dialog from \"../components/dialog.svelte\";\r\n  import Box from \"../components/box.svelte\";\r\n  import TableNew from \"./TableNew.svelte\";\r\n  import { onMount } from \"svelte\";\r\n\r\n  let TABLE_NAMES = [];\r\n  let Loaded = false;\r\n\r\n  onMount(() => {\r\n    Loaded = true;\r\n  });\r\n\r\n  window.TableDB = new DB(\"tableDB\");\r\n  function getUpdates() {\r\n    window.TableDB.get_clean(\"tableNames\", (data) => {\r\n      if (data.names != null) {\r\n        TABLE_NAMES = data.names;\r\n      }\r\n    });\r\n  }\r\n  getUpdates();\r\n\r\n  window.socket.on(\"update table\", () => {\r\n    getUpdates();\r\n  });\r\n\r\n  window.TableDB.change(() => {\r\n    getUpdates();\r\n  });\r\n\r\n  function changeTable(choosen = \"\") {\r\n    window.changePage(\"tableview\");\r\n    window.choosenTable = choosen;\r\n  }\r\n\r\n  window.changeTable = changeTable;\r\n</script>\r\n\r\n<style>\r\n  button {\r\n    font-weight: bold;\r\n    margin-right: 10px;\r\n    border: 1px solid #6aaac9;\r\n    border-radius: 0px;\r\n    font-size: 20px;\r\n    height: 100px;\r\n    width: 100px;\r\n    background: #1a2835;\r\n  }\r\n\r\n  .down {\r\n    position: relative;\r\n    top: 10px;\r\n    animation: fadeInDown 0.7s;\r\n  }\r\n</style>\r\n\r\n<svelte:head>\r\n  <title>Hope</title>\r\n</svelte:head>\r\n\r\n<div>\r\n  {#if Loaded == true}\r\n    {#if window.editable == true}\r\n      <Dialog\r\n        id=\"new-table\"\r\n        button=\"New Table\"\r\n        style=\"padding: 7px; border-radius: 0px; height: 100px; width: 100px;\r\n        margin-left: 0px; animation: fadeInDown 0.7s;\"\r\n        title=\"Create A New Table\">\r\n        <TableNew />\r\n      </Dialog>\r\n    {/if}\r\n\r\n    {#each TABLE_NAMES as name}\r\n      <button class=\"box down\" title={name} on:click={() => changeTable(name)}>\r\n        {name.substr(0, 5)}\r\n      </button>\r\n    {/each}\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import { encode } from \"../lib/enc.svelte\";\r\n  let numberOfFields = 2;\r\n\r\n  $: fieldList = (NOF => {\r\n    const l = [];\r\n    for (var i = 0; i < NOF; i++) {\r\n      l.push(\"text\");\r\n    }\r\n    return l;\r\n  })(numberOfFields);\r\n\r\n  function createTable() {\r\n    const data = {\r\n      name: tableName,\r\n      values: fieldValues,\r\n      types: fieldTypes\r\n    };\r\n    window.TableDB.get(\"tableNames\", doc => {\r\n      if (doc.names.includes(tableName) != true) {\r\n        if (doc == null) {\r\n          window.TableDB.put(\"tableNames\", { names: [data.name] });\r\n          window.TableDB.put(data.name, data);\r\n        } else {\r\n          const d = doc;\r\n          d.names.push(data.name);\r\n          window.TableDB.put(\"tableNames\", d);\r\n          window.TableDB.put(data.name, data);\r\n        }\r\n        fieldValues = [\"id\", ...fieldValues];\r\n        fieldTypes = [\"INTEGER PRIMARY KEY AUTOINCREMENT\", ...fieldTypes];\r\n\r\n        const encFieldValues = [];\r\n        for (var i = 0; i < fieldValues.length; i++) {\r\n          encFieldValues.push(encode(fieldValues[i]));\r\n        }\r\n\r\n        const newData = {\r\n          name: tableName,\r\n          values: encFieldValues,\r\n          types: fieldTypes\r\n        };\r\n\r\n        window.socket.emit(\"new table\", newData);\r\n      }\r\n    });\r\n\r\n    window.dialog_close(`new-table`);\r\n  }\r\n\r\n  let fieldValues = [];\r\n  let fieldTypes = [];\r\n  let tableName = \"\";\r\n</script>\r\n\r\n<style>\r\n  tr td {\r\n    text-align: center;\r\n  }\r\n\r\n  button {\r\n    border: 1px solid #6aaac9;\r\n    border-radius: 0px;\r\n  }\r\n\r\n  .style {\r\n    border: 1px solid #6aaac9;\r\n    padding: 10px;\r\n    padding-top: 20px;\r\n    font-weight: bold;\r\n  }\r\n</style>\r\n\r\n<table>\r\n  <tr>\r\n    <td>\r\n      <span>Number Of Fields:</span>\r\n    </td>\r\n    <td>\r\n      <input type=\"number\" bind:value={numberOfFields} />\r\n    </td>\r\n  </tr>\r\n  <br />\r\n  <tr class=\"style\">\r\n    <td class=\"style\">Field Name</td>\r\n    <td class=\"style\">Field Type</td>\r\n  </tr>\r\n  {#each fieldList as i, n}\r\n    <tr class=\"style\">\r\n      <td class=\"style\">\r\n        <input\r\n          bind:value={fieldValues[`${n}`]}\r\n          type=\"text\"\r\n          placeholder=\"Field {n + 1}\" />\r\n      </td>\r\n\r\n      <td class=\"style\">\r\n        <select bind:value={fieldTypes[`${n}`]}>\r\n          <option value=\"text\">text</option>\r\n          <option value=\"number\">number</option>\r\n          <option value=\"date\">date</option>\r\n        </select>\r\n        <br />\r\n      </td>\r\n    </tr>\r\n  {/each}\r\n  <br />\r\n  <br />\r\n  <br />\r\n  <tr>\r\n    <td>\r\n      <input bind:value={tableName} type=\"text\" placeholder=\"Table Name\" />\r\n    </td>\r\n    <td>\r\n      <button on:click={() => createTable()}>Create Table</button>\r\n    </td>\r\n  </tr>\r\n</table>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import Dialog from \"../components/dialog.svelte\";\r\n  import Box from \"../components/box.svelte\";\r\n  import { text } from \"svelte/internal\";\r\n\r\n  let t = 0;\r\n  let DATA = [[\"N/A\"]];\r\n  let EDIT = {};\r\n  let EDIT_SHOW = false;\r\n  let EDIT_DATA = [];\r\n  let colspan = 0;\r\n  let newData = [];\r\n  let LOADED = false;\r\n  let CURRENT_PAGE = 1;\r\n  let FILTER_SHOW = false;\r\n  let FILTER_FIELD = 0;\r\n  let FILTER_VALUE;\r\n  let code = \"\";\r\n  let CODE_SHOW = false;\r\n  let basicData = { values: [], types: [] };\r\n\r\n  onMount(() => {\r\n    getScript();\r\n    window.TableDB.get_clean(window.choosenTable, (doc) => {\r\n      new Promise((success, fail) => {\r\n        try {\r\n          basicData = doc;\r\n          success(\"Data Loaded\");\r\n        } catch {\r\n          fail(\"Couldn't load data...\");\r\n        }\r\n      })\r\n        .then(() => {\r\n          const len = basicData.values.length;\r\n          colspan = len;\r\n        })\r\n        .then(() => {\r\n          if (code == \"\" || code == null) {\r\n            code = `function code(data){\r\n        // const fields = ${JSON.stringify(basicData.values)}\r\n}`;\r\n            document.getElementById(\r\n              `${window.choosenTable}-script`\r\n            ).innerHTML = code;\r\n          }\r\n        })\r\n        .then(() => {\r\n          LOADED = true;\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    });\r\n  });\r\n\r\n  window.socket.on(\"update\", () => {\r\n    getQuery();\r\n  });\r\n\r\n  function getScript() {\r\n    window.TableDB.get_clean(`${window.choosenTable}-script`, (result) => {\r\n      if (result.code != null) {\r\n        const newCode = `\r\n      window.codes[\"${window.choosenTable}-function\"] = ${result.code}`;\r\n        const script = document.createElement(\"script\");\r\n        script.innerHTML = newCode;\r\n        document.head.appendChild(script);\r\n        document.getElementById(`${window.choosenTable}-script`).innerHTML =\r\n          result.code;\r\n        \r\n        code = result.code\r\n      }\r\n    });\r\n  }\r\n\r\n  // Test with TableDB, if worked, delete from main and make it final\r\n\r\n  function submitData() {\r\n    if (newData.length != 0) {\r\n      const encFieldValues = [];\r\n      for (var i = 0; i < basicData.values.length; i++) {\r\n        encFieldValues.push(basicData.values[i]);\r\n      }\r\n      window.socket.emit(\"new query\", {\r\n        table_name: window.choosenTable,\r\n        fields: encFieldValues,\r\n        data: newData,\r\n      });\r\n\r\n      getQuery();\r\n      window.codes[`${window.choosenTable}-function`](newData);\r\n\r\n      const NewData = [];\r\n      for (var i = 0; i < newData.length; i++) {\r\n        NewData.push(\"\");\r\n      }\r\n      newData = NewData;\r\n    } else {\r\n      alert(\"Please Fill The Fields Before Submitting\");\r\n    }\r\n  }\r\n\r\n  function changeType(inpt) {\r\n    const i = parseInt(inpt.id);\r\n    inpt.setAttribute(\"type\", basicData.types[i]);\r\n  }\r\n\r\n  function changeTypeEdit(inpt) {\r\n    const i = parseInt(inpt.id.replace(\"edit-\", \"\"));\r\n    inpt.setAttribute(\"type\", basicData.types[i]);\r\n  }\r\n\r\n  function getQuery(page = 1) {\r\n    window.socket.emit(\"get query\", {\r\n      name: window.choosenTable,\r\n      page: page,\r\n    });\r\n\r\n    window.socket.on(\"client get query\", (data) => {\r\n      const finalResult = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        const row = [];\r\n        for (var key in data[i]) {\r\n          row.push(data[i][key]);\r\n        }\r\n        finalResult.push(row);\r\n      }\r\n      DATA = finalResult;\r\n    });\r\n  }\r\n\r\n  getQuery();\r\n\r\n  function nextPage() {\r\n    CURRENT_PAGE += 1;\r\n    getQuery(CURRENT_PAGE);\r\n  }\r\n\r\n  function beforePage() {\r\n    if (CURRENT_PAGE <= 1) {\r\n      CURRENT_PAGE = 1;\r\n    } else {\r\n      CURRENT_PAGE -= 1;\r\n    }\r\n    getQuery(CURRENT_PAGE);\r\n  }\r\n\r\n  function deleteTable() {\r\n    const confirmation = confirm(\"Are You Sure You Want To Delete This Table?\");\r\n    if (confirmation) {\r\n      window.TableDB.get_clean(\"tableNames\", (doc) => {\r\n        const filterNames = [];\r\n        for (var i = 0; i < doc.names.length; i++) {\r\n          if (doc.names[i] != window.choosenTable) {\r\n            filterNames.push(doc.names[i]);\r\n          }\r\n        }\r\n\r\n        window.TableDB.delete(window.choosenTable);\r\n        window.socket.emit(\"delete table\", { name: window.choosenTable });\r\n        window.TableDB.put(\"tableNames\", { names: filterNames });\r\n        location.reload();\r\n      });\r\n    }\r\n  }\r\n\r\n  function deleteQuery(rowNum) {\r\n    const rowData = DATA[rowNum];\r\n    const confirmation = confirm(\"Are You Sure You Want To Delete This Row?\");\r\n    if (confirmation) {\r\n      window.socket.emit(\"delete query\", {\r\n        name: window.choosenTable,\r\n        columnNames: basicData.values,\r\n        data: rowData,\r\n      });\r\n      DATA.splice(rowNum, 1);\r\n      DATA = DATA;\r\n    }\r\n  }\r\n\r\n  function editQuery(rowNum) {\r\n    const noOfFields = basicData.values.length;\r\n    const inputs = [];\r\n    for (var i = 0; i < noOfFields; i++) {\r\n      inputs.push(\r\n        document.getElementById(`row-${rowNum}-field-${i}`).innerHTML\r\n      );\r\n    }\r\n    EDIT = {\r\n      field: basicData.values,\r\n      type: basicData.types,\r\n      data: inputs,\r\n    };\r\n\r\n    EDIT_DATA = [];\r\n    for (var i = 0; i < inputs.length; i++) {\r\n      EDIT_DATA.push(inputs[i]);\r\n    }\r\n\r\n    EDIT_SHOW = true;\r\n    window.dialog_show(`${window.choosenTable}-edit-dialog`);\r\n  }\r\n\r\n  function update(d) {\r\n    const confirmation = confirm(\"Are You Sure You Want To Update This Query?\");\r\n    if (confirmation) {\r\n      window.socket.emit(\"update query\", {\r\n        name: window.choosenTable,\r\n        columnNames: basicData.values,\r\n        default: EDIT.data,\r\n        data: EDIT_DATA,\r\n      });\r\n    }\r\n    onClose();\r\n    getQuery();\r\n  }\r\n\r\n  function filterData() {\r\n    const field = basicData.values[FILTER_FIELD];\r\n    const value = document.getElementById(\"filterField\").value;\r\n\r\n    window.socket.emit(\"filter query\", {\r\n      table: window.choosenTable,\r\n      field: field,\r\n      value: value,\r\n    });\r\n\r\n    window.socket.on(\"filter query client\", (data) => {\r\n      const finalResult = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        const row = [];\r\n        for (var key in data[i]) {\r\n          row.push(data[i][key]);\r\n        }\r\n        finalResult.push(row);\r\n      }\r\n      DATA = finalResult;\r\n    });\r\n\r\n    onClose();\r\n  }\r\n\r\n  function onClose() {\r\n    FILTER_SHOW = false;\r\n    EDIT_SHOW = false;\r\n    CODE_SHOW = false;\r\n  }\r\n\r\n  function codeSave() {\r\n    window.TableDB.put(`${window.choosenTable}-script`, {\r\n      name: window.choosenTable,\r\n      code: code,\r\n    });\r\n    document.getElementById(`${window.choosenTable}-script`).innerHTML = code;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  table {\r\n    margin: 0 auto;\r\n    text-align: center;\r\n  }\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n  .title {\r\n    font-size: 40px;\r\n  }\r\n  .display {\r\n    border: 2px solid #6aaac9;\r\n    padding: 20px;\r\n  }\r\n  img {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n\r\n  img:hover {\r\n    background: #112436;\r\n  }\r\n\r\n  button {\r\n    padding: 10px;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    border: 1px solid #6aaac9;\r\n  }\r\n\r\n  .delete-button {\r\n    padding: 20px;\r\n    width: 100%;\r\n  }\r\n\r\n  .right {\r\n    animation: backInRight 0.5s;\r\n  }\r\n\r\n  .left {\r\n    animation: backInLeft 0.5s;\r\n  }\r\n\r\n  .down {\r\n    animation: backInDown 0.5s;\r\n  }\r\n\r\n  .header {\r\n    font-size: 160%;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .mainContent {\r\n    font-size: 100%;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .child {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  fieldset {\r\n    border-color: #6aaac9;\r\n  }\r\n\r\n  #codeDiv {\r\n    width: 300px;\r\n    height: 200px;\r\n  }\r\n\r\n  #codeArea {\r\n    height: 100%;\r\n    width: 100%;\r\n    resize: none;\r\n  }\r\n</style>\r\n\r\n<svelte:head>\r\n  <title>{window.choosenTable} | Hope</title>\r\n</svelte:head>\r\n\r\n<div>\r\n  {#if LOADED === true}\r\n    <table>\r\n      <tr>\r\n        <td colspan={basicData.values.length + 3}>\r\n          <span class=\"title unselectable down\">{window.choosenTable}</span>\r\n        </td>\r\n      </tr>\r\n      <br />\r\n\r\n      {#if window.editable == true}\r\n        <tr class=\"down\">\r\n          <td />\r\n          <td>\r\n            <Box>\r\n              <button\r\n                class=\"delete-button unselectable\"\r\n                on:click={() => deleteTable()}>\r\n                Delete\r\n              </button>\r\n            </Box>\r\n          </td>\r\n\r\n          <td>\r\n\r\n            <button\r\n              on:click={() => (FILTER_SHOW = true)}\r\n              style=\"width: 100%; margin: 0; border-radius: 0px; border-radius:\r\n              10px; height: 59px;\">\r\n              Filter\r\n            </button>\r\n            {#if FILTER_SHOW === true}\r\n              <Dialog\r\n                title=\"Filter The Table Data\"\r\n                open=\"true\"\r\n                {onClose}\r\n                id=\"{window.choosenTable}-{t}-filter\">\r\n\r\n                <table>\r\n                  <tr>\r\n                    <td>\r\n                      <fieldset>\r\n                        <legend>Filter By:</legend>\r\n                        <select bind:value={FILTER_FIELD} class=\"child\">\r\n                          {#each basicData.values as name, n}\r\n                            <option value={n}>{name}</option>\r\n                          {/each}\r\n                        </select>\r\n                      </fieldset>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <fieldset>\r\n                        <legend>Search:</legend>\r\n                        <input\r\n                          class=\"child\"\r\n                          id=\"filterField\"\r\n                          type={basicData.types[FILTER_FIELD]} />\r\n                      </fieldset>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <button on:click={() => filterData()}>Filter</button>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n\r\n              </Dialog>\r\n            {/if}\r\n\r\n          </td>\r\n\r\n          <td>\r\n            <button\r\n              on:click={() => (CODE_SHOW = true)}\r\n              style=\"width: 100%; margin: 0; border-radius: 0px; border-radius:\r\n              10px; height: 59px;\">\r\n              Script\r\n            </button>\r\n            {#if CODE_SHOW === true}\r\n              <Dialog\r\n                title=\"Script\"\r\n                open=\"true\"\r\n                {onClose}\r\n                id=\"{window.choosenTable}-script-dialog\">\r\n                <div id=\"codeDiv\">\r\n                  <textarea id=\"codeArea\" bind:value={code} />\r\n                </div>\r\n                <br />\r\n                <button on:click={() => codeSave()}>Save</button>\r\n              </Dialog>\r\n            {/if}\r\n          </td>\r\n\r\n        </tr>\r\n\r\n        <tr class=\"down\">\r\n          <td />\r\n          {#each basicData.values as name, n}\r\n            <td>\r\n              <input\r\n                id={n}\r\n                placeholder={name}\r\n                bind:value={newData[`${n}`]}\r\n                use:changeType />\r\n              <br />\r\n            </td>\r\n          {/each}\r\n          <td>\r\n            <button on:click={() => submitData()}>Submit</button>\r\n          </td>\r\n        </tr>\r\n        <br />\r\n      {/if}\r\n      <tr class=\"display down\">\r\n        <td class=\"display unselectable\">\r\n          <span>No.</span>\r\n        </td>\r\n        {#each basicData.values as name}\r\n          <td class=\"display unselectable header\">\r\n            <span>{name}</span>\r\n          </td>\r\n        {/each}\r\n        {#if window.editable == true}\r\n          <td colspan=\"2\" class=\"display unselectable\">\r\n            <span>Setting</span>\r\n          </td>\r\n        {/if}\r\n      </tr>\r\n\r\n      {#if EDIT_SHOW == true}\r\n        <Dialog\r\n          id=\"{window.choosenTable}-edit-dialog\"\r\n          title=\"EDIT DATA\"\r\n          style=\"\"\r\n          open=\"true\">\r\n          {#each EDIT.data as e, n}\r\n            <span>Field {EDIT.field[n]}:</span>\r\n            <input\r\n              use:changeTypeEdit\r\n              id=\"edit-{n}\"\r\n              placeholder={e}\r\n              bind:value={EDIT_DATA[n]} />\r\n            <br />\r\n          {/each}\r\n          <br />\r\n          <button on:click={() => update(EDIT)}>Update</button>\r\n        </Dialog>\r\n      {/if}\r\n\r\n      {#each DATA as d, n}\r\n        <tr class=\"display\" id=\"row-{n}-{window.choosenTable}-table\">\r\n          <td class=\"display left\">{n + 1}</td>\r\n          {#each d as item, m}\r\n            <td class=\"display right mainContent\" id=\"row-{n}-field-{m}\">\r\n              {item}\r\n            </td>\r\n          {/each}\r\n          {#if window.editable == true}\r\n            <td>\r\n              <img\r\n                on:click={() => editQuery(n)}\r\n                class=\"display unselectable right\"\r\n                src=\"/icon-edit.png\"\r\n                alt=\"Edit\" />\r\n              <img\r\n                on:click={() => deleteQuery(n)}\r\n                class=\"display unselectable right\"\r\n                src=\"/icon-delete.png\"\r\n                alt=\"Delete\" />\r\n            </td>\r\n          {/if}\r\n        </tr>\r\n      {/each}\r\n      <tr class=\"display\">\r\n        <td />\r\n        <td>\r\n          <Box>\r\n            <button on:click={() => beforePage()} class=\"delete-button\">\r\n              Previous Page\r\n            </button>\r\n          </Box>\r\n        </td>\r\n        <td>\r\n          <Box>\r\n            <button on:click={() => nextPage()} class=\"delete-button\">\r\n              Next Page\r\n            </button>\r\n          </Box>\r\n        </td>\r\n        <td class=\"display unselectable\">Page: {CURRENT_PAGE}</td>\r\n      </tr>\r\n\r\n    </table>\r\n  {/if}\r\n  <script id=\"{window.choosenTable}-script\">\r\n\r\n  </script>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "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"
}